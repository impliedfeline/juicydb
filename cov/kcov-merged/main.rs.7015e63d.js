var data = {lines:[
{"lineNum":"    1","line":"use juicydb::parser::*;"},
{"lineNum":"    2","line":"use std::io::{self, Write};"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"fn main() {","class":"lineNoCov","hits":"0",},
{"lineNum":"    5","line":"    println!(\"Welcome to juicydb\");","class":"lineNoCov","hits":"0",},
{"lineNum":"    6","line":"    loop {","class":"lineNoCov","hits":"0",},
{"lineNum":"    7","line":"        print!(\"> \");","class":"lineNoCov","hits":"0",},
{"lineNum":"    8","line":"        io::stdout().flush().expect(\"Failed to flush prompt\");","class":"lineNoCov","hits":"0",},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"        let mut input = String::new();","class":"lineNoCov","hits":"0",},
{"lineNum":"   11","line":"        io::stdin()","class":"lineNoCov","hits":"0",},
{"lineNum":"   12","line":"            .read_line(&mut input)"},
{"lineNum":"   13","line":"            .expect(\"Failed to read line\");","class":"lineNoCov","hits":"0",},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"        if input.is_empty() {","class":"lineNoCov","hits":"0",},
{"lineNum":"   16","line":"            break;","class":"lineNoCov","hits":"0",},
{"lineNum":"   17","line":"        }"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"        let mut parser = Parser::new(&input);","class":"lineNoCov","hits":"0",},
{"lineNum":"   20","line":"        let stmt = parser.parse_command();","class":"lineNoCov","hits":"0",},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"        match stmt {","class":"lineNoCov","hits":"0",},
{"lineNum":"   23","line":"            Ok(stmt) => match stmt {","class":"lineNoCov","hits":"0",},
{"lineNum":"   24","line":"                Command::Statement(stmt) => println!(\"{:#?}\", stmt),","class":"lineNoCov","hits":"0",},
{"lineNum":"   25","line":"                Command::MetaCommand(cmd) => {","class":"lineNoCov","hits":"0",},
{"lineNum":"   26","line":"                    match cmd {","class":"lineNoCov","hits":"0",},
{"lineNum":"   27","line":"                        MetaCommand::Exit => return,","class":"lineNoCov","hits":"0",},
{"lineNum":"   28","line":"                        MetaCommand::Print => todo!(),","class":"lineNoCov","hits":"0",},
{"lineNum":"   29","line":"                    }"},
{"lineNum":"   30","line":"                }"},
{"lineNum":"   31","line":"            },","class":"lineNoCov","hits":"0",},
{"lineNum":"   32","line":"            Err(err) => println!(\"Error: {}\", err),","class":"lineNoCov","hits":"0",},
{"lineNum":"   33","line":"        }"},
{"lineNum":"   34","line":"    }","class":"lineNoCov","hits":"0",},
{"lineNum":"   35","line":"}","class":"lineNoCov","hits":"0",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "", "date" : "2020-04-17 23:01:01", "instrumented" : 23, "covered" : 0,};
var merged_data = [];
